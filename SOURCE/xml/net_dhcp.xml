<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd">
<!--
*********************************
Please see LICENSE.txt for this document's license.
*********************************
-->
<chapter xml:base="net_dhcp.xml" id="cha.dhcp">
 <title>DHCP</title><indexterm class="startofrange" id="idx.DHCP">
 <primary>DHCP</primary></indexterm><indexterm>
 <primary>networks</primary>
 <secondary>DHCP</secondary></indexterm><indexterm>
 <primary>IP addresses</primary>
 <secondary>dynamic assignment</secondary></indexterm>
 <abstract>
  <para>
   The purpose of the <emphasis>Dynamic Host Configuration
   Protocol</emphasis> (DHCP) is to assign network settings centrally (from
   a server) rather than configuring them locally on each and every
   workstation. A host configured to use DHCP does not have control over its
   own static address. It is enabled to configure itself completely and
   automatically according to directions from the server. If you use the
   NetworkManager on the client side, you do not need to configure the client at all.
   This is useful if you have changing environments and only one interface
   active at a time. Never use NetworkManager on a machine that runs a DHCP server.
  </para>
 </abstract>
 
 <para>
  One way to configure a DHCP server is to identify each client using the
  hardware address of its network card (which should be fixed in most
  cases), then supply that client with identical settings each time it
  connects to the server. DHCP can also be configured to assign addresses to
  each relevant client dynamically from an address pool set up for this
  purpose. In the latter case, the DHCP server tries to assign the same
  address to the client each time it receives a request, even over extended
  periods. This works only if the network does not have more clients than
  addresses.
 </para>
 <para>
  DHCP makes life easier for system administrators. Any changes, even bigger
  ones, related to addresses and the network configuration in general can be
  implemented centrally by editing the server's configuration file. This is
  much more convenient than reconfiguring numerous workstations. It is also
  much easier to integrate machines, particularly new machines, into the
  network, because they can be given an IP address from the pool. Retrieving
  the appropriate network settings from a DHCP server is especially useful
  in case of laptops regularly used in different networks.
 </para>
 <para>
  In this chapter, the DHCP server will run in the same subnet as the
  workstations, 192.168.2.0/24 with 192.168.2.1 as gateway. It has the
  fixed IP address 192.168.2.254 and serves two address ranges, 192.168.2.10 to
  192.168.2.20 and 192.168.2.100 192.168.2.200.
 </para>
 <para>
  A DHCP server supplies not only the IP address and the netmask, but also
  the hostname, domain name, gateway, and name server addresses for the
  client to use. In addition to that, DHCP allows a number of other
  parameters to be configured in a centralized way, for example, a time
  server from which clients may poll the current time or even a print
  server.
 </para>
 <sect1 id="sec.dhcp.yast">
  <title>Configuring a DHCP Server with YaST</title><indexterm>

  <primary>YaST</primary>

  <secondary>DHCP</secondary></indexterm><indexterm>

  <primary>DHCP</primary>

  <secondary>configuring with YaST</secondary></indexterm>

  <para>
   To install a DHCP server, start YaST and select
   <menuchoice><guimenu>Software</guimenu> <guimenu>Software
   Management</guimenu></menuchoice>. Choose
   <menuchoice><guimenu>Filter</guimenu>
   <guimenu>Patterns</guimenu></menuchoice> and select <guimenu>DHCP and DNS
   Server</guimenu>. Confirm the installation of the dependent packages to
   finish the installation process.
  </para>

  <important>
   <title>LDAP Support</title>
   <para>
    The YaST DHCP module can be set up to store the server configuration
    locally (on the host that runs the DHCP server) or to have its
    configuration data managed by an LDAP server. If you want to use LDAP,
    set up your LDAP environment before configuring the DHCP server.
   </para>
   <para>
    For more information about LDAP, see
    <xref linkend="cha.security.ldap"/>.
   </para>
  </important>

  <para>
   The YaST DHCP module (<systemitem>yast2-dhcp-server</systemitem>)
   allows you to set up your own DHCP server for the local network. The
   module can run in wizard mode or expert configuration mode.
  </para>

  <sect2 id="sec.dhcp.yast.init">
   <title>Initial Configuration (Wizard)</title>
   <para>
    When the module is started for the first time, a wizard starts,
    prompting you to make a few basic decisions concerning server
    administration. Completing this initial setup produces a very basic
    server configuration that should function in its essential aspects. The
    expert mode can be used to deal with more advanced configuration tasks.
   </para>
   
   
   <variablelist>
    <varlistentry>
     <term>Card Selection</term>
     <listitem>
      <para>
       In the first step, YaST looks for the network interfaces available
       on your system and displays them in a list. From the list, select the
       interface to which the DHCP server should listen and click
       <guimenu>Select</guimenu>. After this, select <guimenu>Open Firewall
       for Selected Interfaces</guimenu> to open the firewall for this
       interface, and click <guimenu>Next</guimenu>. See
       <xref linkend="fig.yast2.dhcp.wiz1"/>.
      </para>
      <figure id="fig.yast2.dhcp.wiz1">
       <title>DHCP Server: Card Selection</title>
       <mediaobject>
        <imageobject role="fo">
         <imagedata width="75%" fileref="yast2_dhcp_wiz1.png" format="PNG"/>
        </imageobject>
        <imageobject role="html">
         <imagedata width="75%" fileref="yast2_dhcp_wiz1.png" format="PNG"/>
        </imageobject>
       </mediaobject>
      </figure>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Global Settings</term>
     <listitem>
      <para>
       Use the check box to determine whether your DHCP settings should be
       automatically stored by an LDAP server. In the entry fields, provide
       the network specifics for all clients the DHCP server should manage.
       These specifics are the domain name, address of a time server,
       addresses of the primary and secondary name server, addresses of a
       print and a WINS server (for a mixed network with both Windows and
       Linux clients), gateway address, and lease time. See
       <xref linkend="fig.yast2.dhcp.wiz2"/>.
      </para>
      <figure id="fig.yast2.dhcp.wiz2">
       <title>DHCP Server: Global Settings</title>
       <mediaobject>
        <imageobject role="fo">
         <imagedata width="75%" fileref="yast2_dhcp_wiz2.png" format="PNG"/>
        </imageobject>
        <imageobject role="html">
         <imagedata width="75%" fileref="yast2_dhcp_wiz2.png" format="PNG"/>
        </imageobject>
       </mediaobject>
      </figure>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Dynamic DHCP</term>
     <listitem>
      <para>
       In this step, configure how dynamic IP addresses should be assigned
       to clients. To do so, specify an IP range from which the server can
       assign addresses to DHCP clients. All these addresses must be covered
       by the same netmask. Also specify the lease time during which a
       client may keep its IP address without needing to request an
       extension of the lease. Optionally, specify the maximum lease
       timeâ€”the period during which the server reserves an IP address
       for a particular client. See <xref linkend="fig.yast2.dhcp.wiz3"/>.
      </para>
      <figure id="fig.yast2.dhcp.wiz3">
       <title>DHCP Server: Dynamic DHCP</title>
       <mediaobject>
        <imageobject role="fo">
         <imagedata width="75%" fileref="yast2_dhcp_wiz3.png" format="PNG"/>
        </imageobject>
        <imageobject role="html">
         <imagedata width="75%" fileref="yast2_dhcp_wiz3.png" format="PNG"/>
        </imageobject>
       </mediaobject>
      </figure>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Finishing the Configuration and Setting the Start Mode</term>
     <listitem>
      <para>
       After the third part of the configuration wizard, a last dialog is
       shown in which you can define how the DHCP server should be started.
       Here, specify whether to start the DHCP server automatically when the
       system is booted or manually when needed (for example, for testing
       purposes). Click <guimenu>Finish</guimenu> to complete the
       configuration of the server. See
       <xref linkend="fig.yast2.dhcp.start"/>.

      </para>
      <figure id="fig.yast2.dhcp.start">
       <title>DHCP Server: Start-Up</title>
       <mediaobject>
        <imageobject role="fo">
         <imagedata width="75%" fileref="yast2_dhcp_start.png" format="PNG"/>
        </imageobject>
        <imageobject role="html">
         <imagedata width="75%" fileref="yast2_dhcp_start.png" format="PNG"/>
        </imageobject>
       </mediaobject>
      </figure>
     </listitem>
    </varlistentry>
    
   </variablelist>
  </sect2>

  
 </sect1>
 <sect1 id="sec.dhcp.soft">
  <title>DHCP Software Packages</title><indexterm>

  <primary>DHCP</primary>

  <secondary>packages</secondary></indexterm>

  <para>
   Both the DHCP server and the DHCP clients are available for
   <phrase os="osuse">openSUSE</phrase>. The DHCP server available is dhcpd (published by the
   Internet Systems Consortium). On the client side, choose between two
   different DHCP client programs: <systemitem>dhcp-client</systemitem>
   (also from ISC) and the DHCP client daemon in the
   <systemitem class="resource">dhcpcd</systemitem> package.
  </para>

  <para>
   <phrase os="osuse">openSUSE</phrase> installs dhcpcd by default. The program is very easy to
   handle and is launched automatically on each system boot to watch for a
   DHCP server. It does not need a configuration file to do its job and
   works out of the box in most standard setups. For more complex
   situations, use the ISC dhcp-client, which is controlled by means of the
   configuration file <filename>/etc/dhclient.conf</filename>. <indexterm>
   <primary>configuration files</primary>
   <secondary>dhclient.conf</secondary>
   </indexterm>
  </para>
 </sect1>
 <sect1 id="sec.dhcp.server">
  <title>The DHCP Server dhcpd</title><indexterm>

  <primary>configuration files</primary>

  <secondary>dhcpd.conf</secondary></indexterm><indexterm class="startofrange" id="idx.dhcp_server">

  <primary>DHCP</primary>

  <secondary>server</secondary></indexterm><indexterm class="startofrange" id="idx.dhcp_dhcpd">

  <primary>DHCP</primary>

  <secondary>dhcpd</secondary></indexterm>

  <para>
   The core of any DHCP system is the dynamic host configuration protocol
   daemon. This server <emphasis>leases</emphasis> addresses and watches how
   they are used, according to the settings defined in the configuration
   file <filename>/etc/dhcpd.conf</filename>. By changing the parameters and
   values in this file, a system administrator can influence the program's
   behavior in numerous ways. Look at the basic sample
   <filename>/etc/dhcpd.conf</filename> file in
   <xref linkend="dat.dhcp.conf"/>.
  </para>

  <example id="dat.dhcp.conf">
   <title>The Configuration File /etc/dhcpd.conf</title>
<screen>
default-lease-time 600;         # 10 minutes
max-lease-time 7200;            # 2  hours

option domain-name "example.com";
option domain-name-servers 192.168.1.116;
option broadcast-address 192.168.2.255;
option routers 192.168.2.1;
option subnet-mask 255.255.255.0;

subnet 192.168.2.0 netmask 255.255.255.0
 {
  range 192.168.2.10 192.168.2.20;
  range 192.168.2.100 192.168.2.200;
 }
</screen>
  </example>

  <para>
   This simple configuration file should be sufficient to get the DHCP
   server to assign IP addresses in the network. Make sure that a semicolon
   is inserted at the end of each line, because otherwise dhcpd is not
   started.
  </para>

  <para>
   The sample file can be divided into three sections. The first one defines
   how many seconds an IP address is leased to a requesting client by
   default (<literal>default-lease-time</literal>) before it should apply
   for renewal. This section also includes a statement of the maximum period
   for which a machine may keep an IP address assigned by the DHCP server
   without applying for renewal (<literal>max-lease-time</literal>).
  </para>

  <para>
   In the second part, some basic network parameters are defined on a global
   level:
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     The line <literal>option domain-name</literal> defines the default
     domain of your network.
    </para>
   </listitem>
   <listitem>
    <para>
     With the entry <literal>option domain-name-servers</literal>, specify
     up to three values for the DNS servers used to resolve IP addresses
     into hostnames and vice versa. Ideally, configure a name server on your
     machine or somewhere else in your network before setting up DHCP. That
     name server should also define a hostname for each dynamic address and
     vice versa. To learn how to configure your own name server, read
     <xref linkend="cha.dns"/>.
    </para>
   </listitem>
   <listitem>
    <para>
     The line <literal>option broadcast-address</literal> defines the
     broadcast address the requesting client should use.
    </para>
   </listitem>
   <listitem>
    <para>
     With <literal>option routers</literal>, set where the server should
     send data packets that cannot be delivered to a host on the local
     network (according to the source and target host address and the subnet
     mask provided). In most cases, especially in smaller networks, this
     router is identical to the Internet gateway.
    </para>
   </listitem>
   <listitem>
    <para>
     With <literal>option subnet-mask</literal>, specify the netmask
     assigned to clients.
    </para>
   </listitem>
  </itemizedlist>

  <para>
   The last section of the file defines a network, including a subnet mask.
   To finish, specify the address range that the DHCP daemon should use to
   assign IP addresses to interested clients. In
   <xref linkend="dat.dhcp.conf"/>, clients may be given any address
   between <literal>192.168.2.10</literal> and
   <literal>192.168.2.20</literal> as well as
   <literal>192.168.2.100</literal> and <literal>192.168.2.200</literal>.
  </para>

  <para>
   After editing these few lines, you should be able to activate the DHCP
   daemon with the command
   <command>rcdhcpd</command>Â <option>start</option>. It will be ready
   for use immediately. Use the command
   <command>rcdhcpd</command>Â <option>check-syntax</option> to perform
   a brief syntax check. If you encounter any unexpected problems with your
   configuration (the server aborts with an error or does not return
   <literal>done</literal> on start), you should be able to find out what
   has gone wrong by looking for information either in the main system log
   <filename>/var/log/messages</filename> or on consoleÂ 10
   (<keycombo><keycap>Ctrl</keycap><keycap>Alt</keycap><keycap>F10</keycap></keycombo>).
  </para>

  <para>
   On a default <phrase os="osuse">openSUSE</phrase> system, the DHCP daemon is started in a chroot
   environment for security reasons. The configuration files must be copied
   to the chroot environment so the daemon can find them. Normally, there is
   no need to worry about this because the command
   <command>rcdhcpd</command>Â <option>start</option> automatically
   copies the files.
  </para><indexterm class="endofrange" startref="idx.dhcp_server"/><indexterm class="endofrange" startref="idx.dhcp_dhcpd"/>

  <sect2 id="sec.dhcp.statip">
   <title>Clients with Fixed IP Addresses</title><indexterm>
   <primary>DHCP</primary>
   <secondary>static address assignment</secondary></indexterm>
   <para>
    DHCP can also be used to assign a predefined, static address to a
    specific client. Addresses assigned explicitly always take priority over
    dynamic addresses from the pool. A static address never expires in the
    way a dynamic address would, for example, if there were not enough
    addresses available and the server needed to redistribute them among
    clients.
   </para>
   <para>
    To identify a client configured with a static address, dhcpd uses the
    hardware address (which is a globally unique, fixed numerical code
    consisting of six octet pairs) for the identification of all network
    devices (for example, <literal>00:30:6E:08:EC:80</literal>). If the respective
    lines, like the ones in <xref linkend="dat.dhcp.conf.add"/>, are added
    to the configuration file of <xref linkend="dat.dhcp.conf"/>, the DHCP
    daemon always assigns the same set of data to the corresponding client.
   </para>
   <example id="dat.dhcp.conf.add">
    <title>Additions to the Configuration File</title>
<screen>host jupiter {
hardware ethernet 00:30:6E:08:EC:80;
fixed-address 192.168.2.100;
}</screen>
   </example>
   <para>
    The name of the respective client (<literal>host</literal>
    <replaceable>hostname</replaceable>, here
    <systemitem>jupiter</systemitem>) is entered in the first line and the MAC
    address in the second line. On Linux hosts, find the MAC address with
    the command <command>ip <option>link show</option></command> followed by
    the network device (for example, <literal>eth0</literal>). The output
    should contain something like
   </para>
<screen>link/ether 00:30:6E:08:EC:80</screen>
   <para>
    In the preceding example, a client with a network card having the MAC
    address <literal>00:30:6E:08:EC:80</literal> is assigned the IP address
    <systemitem class="ipaddress">192.168.2.100</systemitem> and the hostname
    <literal>jupiter</literal> automatically. The type of hardware to enter is
    <literal>ethernet</literal> in nearly all cases, although
    <literal>token-ring</literal>, which is often found on IBM systems, is
    also supported.
   </para>
  </sect2>

  <sect2>
   <title>The <phrase os="osuse">openSUSE</phrase> Version</title>
   <para>
    To improve security, the <phrase os="osuse">openSUSE</phrase> version of the ISC's DHCP server
    comes with the non-root/chroot patch by Ari Edelkind applied. This
    enables dhcpd to run with the user ID
    <systemitem class="username">nobody</systemitem> and run in a chroot
    environment (<filename>/var/lib/dhcp</filename>). To make this possible,
    the configuration file <filename>dhcpd.conf</filename> must be located
    in <filename>/var/lib/dhcp/etc</filename>. The init script automatically
    copies the file to this directory when starting.
   </para>
   <para>
    Control the server's behavior regarding this feature by means of entries
    in the file <filename>/etc/sysconfig/dhcpd</filename>. To run dhcpd
    without the chroot environment, set the variable
    <systemitem>DHCPD_RUN_CHROOTED</systemitem> in
    <filename>/etc/sysconfig/dhcpd</filename> to <quote>no</quote>.
   </para>
<?dbfo-need height="10em"?>

   <para>
    To enable dhcpd to resolve hostnames even from within the chroot
    environment, some other configuration files must be copied as well:
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      <filename>/etc/localtime</filename>
     </para>
    </listitem>
    <listitem>
     <para>
      <filename>/etc/host.conf</filename>
     </para>
    </listitem>
    <listitem>
     <para>
      <filename>/etc/hosts</filename>
     </para>
    </listitem>
    <listitem>
     <para>
      <filename>/etc/resolv.conf</filename>
     </para>
    </listitem>
   </itemizedlist>
   <para>
    These files are copied to <filename>/var/lib/dhcp/etc/</filename> when
    starting the init script. Take these copies into account for any changes
    that they require if they are dynamically modified by scripts like
    <filename>/etc/ppp/ip-up</filename>. However, there should be no need to
    worry about this if the configuration file only specifies IP addresses
    (instead of hostnames).
   </para>
   <para>
    If your configuration includes additional files that should be copied
    into the chroot environment, set these under the variable
    <systemitem>DHCPD_CONF_INCLUDE_FILES</systemitem> in the file
    <filename>/etc/sysconfig/dhcpd</filename>. To ensure that the DHCP
    logging facility keeps working even after a restart of the syslog-ng
    daemon, there is an additional entry
    <systemitem>SYSLOGD_ADDITIONAL_SOCKET_DHCP</systemitem> in the file
    <filename>/etc/sysconfig/syslog</filename>.
   </para>
  </sect2>
 </sect1>
 <sect1 id="sec.dhcp.addinfo">
  <title>For More Information</title>

  <para>
   More information about DHCP is available at the Web site of the
   <emphasis>Internet Systems Consortium</emphasis>
   (<ulink url="http://www.isc.org/products/DHCP/"/>). Information is
   also available in the <option>dhcpd</option>,
   <option>dhcpd.conf</option>, <option>dhcpd.leases</option>, and
   <option>dhcp-options</option> man pages.
  </para><indexterm class="endofrange" startref="idx.DHCP"/>
 </sect1>
</chapter>
