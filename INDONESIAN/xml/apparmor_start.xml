<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd">
<!--
*********************************
Please see LICENSE.txt for this document's license.
*********************************
-->
<chapter xml:base="apparmor_start.xml" id="cha.apparmor.start">
 <title>Getting Started</title>
 <para>
  Prepare a successful deployment of AppArmor on your system by carefully
  considering the following items:
 </para>
 <procedure>
  <step performance="required">
   <para>
    Determine the applications to profile. Read more on this in
    <xref linkend="sec.apparmor.start.choose"/>.
   </para>
  </step>
  <step performance="required">
   <para>
    Build the needed profiles as roughly outlined in
    <xref linkend="sec.apparmor.start.build"/>. Check the results and adjust
    the profiles when necessary.
   </para>
  </step>

  <step performance="required">
   <para>
    Update your profiles whenever your environment changes or you need to
    react to security events logged by AppArmor's reporting tool. Refer to
    <xref linkend="sec.apparmor.start.update"/>.
   </para>
  </step>
 </procedure>
<?dbfo-need height="20em"?>

 <sect1 id="sec.apparmor.start.install">
  <title>Installing AppArmor</title>
  <para>
   AppArmor is not installed by default on <phrase os="osuse">openSUSEÂ®</phrase>. Install the pattern
   <systemitem class="resource">apparmor</systemitem> for a complete AppArmor
   installation. Either use the YaST Software Management module for
   installation, or the following zypper command:
  </para>
  <screen>zypper in -t pattern apparmor</screen>
  

  <itemizedlist spacing="compact" mark="bullet">
   <listitem>
    <para>
     <systemitem class="resource">apparmor-docs</systemitem>
    </para>
   </listitem>
   <listitem>
    <para>
     <systemitem class="resource">apparmor-parser</systemitem>
    </para>
   </listitem>
   <listitem>
    <para>
     <systemitem class="resource">apparmor-profiles</systemitem>
    </para>
   </listitem>
   <listitem>
    <para>
     <systemitem class="resource">apparmor-utils</systemitem>
    </para>
   </listitem>
   <listitem>
    <para>
     <systemitem class="resource">audit</systemitem>
    </para>
   </listitem>
   <listitem>
    <para>
     <systemitem class="resource">libapparmor1</systemitem>
    </para>
   </listitem>
   <listitem>
    <para>
     <systemitem class="resource">perl-libapparmor</systemitem>
    </para>
   </listitem>
   <listitem>
    <para>
     <systemitem class="resource">yast2-apparmor</systemitem>
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 id="sec.apparmor.start.enable">
  <title>Enabling and Disabling AppArmor</title>

  <para>
   AppArmor is configured to run by default on any fresh installation of
   <phrase os="osuse">openSUSE</phrase>. There are two ways of toggling the status of AppArmor:
  </para>

  <variablelist>
   <varlistentry>
    <term>Using YaST System Services (Runlevel)</term>
    <listitem>
     <para>
      Disable or enable AppArmor by removing or adding its boot script to the
      sequence of scripts executed on system boot. Status changes are
      applied on reboot.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Using AppArmor Control Panel</term>
    <listitem>
     <para>
      Toggle the status of AppArmor in a running system by switching it off or
      on using the YaST AppArmor Control Panel. Changes made here are applied
      instantaneously. The Control Panel triggers a stop or start event for
      AppArmor and removes or adds its boot script in the system's boot
      sequence.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

<?dbfo-need height="15em"?>


  <para>
   To disable AppArmor permanently (by removing it from the sequence of scripts
   executed on system boot) proceed as follows:
  </para>

  <procedure>
   <step performance="required">
    <para>
     Start YaST.
    </para>
   </step>
   <step performance="required">
    <para>
     Select <menuchoice> <guimenu>System</guimenu> <guimenu>System Services
     (Runlevel)</guimenu> </menuchoice>.
    </para>
   </step>
   <step performance="required">
    <para>
     Select <guimenu>Expert Mode</guimenu>.
    </para>
   </step>
   <step performance="required">
    <para>
     Select <literal>boot.apparmor</literal> and click <menuchoice>
     <guimenu>Set/Reset</guimenu> <guimenu>Disable the service</guimenu>
     </menuchoice>.
    </para>
   </step>
   <step performance="required">
    <para>
     Exit the YaST Runlevel tool with <guimenu>Finish</guimenu>.
    </para>
   </step>
  </procedure>

  <para>
   AppArmor will not be initialized on reboot, and stays inactive until you
   reenable it. Reenabling a service using the YaST Runlevel tool is
   similar to disabling it.
  </para>

  <para>
   Toggle the status of AppArmor in a running system by using the AppArmor Control
   Panel. These changes take effect as soon as you apply them and survive a
   reboot of the system. To toggle AppArmor's status, proceed as follows:
  </para>

  <procedure>
   <step performance="required">
    <para>
     Start YaST.
    </para>
   </step>
   <step performance="required">
    <para>
     Select <menuchoice> <guimenu>AppArmor</guimenu> <guimenu>AppArmor Control
     Panel</guimenu> </menuchoice>.
    </para>
   </step>
   <step performance="required">
    <para>
     Select <menuchoice> <guimenu>Enable AppArmor</guimenu> </menuchoice>. To
     disable AppArmor, uncheck this option.
    </para>
   </step>
   <step performance="required">
    <para>
     Exit the AppArmor Control Panel with <guimenu>Done</guimenu>.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 id="sec.apparmor.start.choose">
  <title>Choosing the Applications to Profile</title>

  <para>
   You only need to protect the programs that are exposed to attacks in your
   particular setup, so only use profiles for those applications you
   actually run. Use the following list to determine the most likely
   candidates:
  </para>

<?dbfo-need height="10em"?>


  <simplelist>
   <member>Network Agents</member>
   <member>Web Applications</member>
   <member>Cron Jobs</member>
  </simplelist>

  <para>
   To find out which processes are currently running with open network ports
   and might need a profile to confine them, run
   <command>aa-unconfined</command> as <systemitem class="username">root</systemitem>.
  </para>

  <example id="ex.unconfined">
   <title>Output of <command>aa-unconfined</command></title>
<screen>19848 /usr/sbin/cupsd not confined
19887 /usr/sbin/sshd not confined
19947 /usr/lib/postfix/master not confined
29205 /usr/sbin/sshd confined by '/usr/sbin/sshd (enforce)'</screen>
  </example>

  <para>
   Each of the processes in the above example labeled <literal>not
   confined</literal> might need a custom profile to confine it. Those
   labeled <literal>confined by</literal> are already protected by AppArmor.
  </para>

  <tip>
   <title>For More Information</title>
   <para>
    For more information about choosing the the right applications to
    profile, refer to <xref linkend="sec.apparmor.concept.determine"/>.
   </para>
  </tip>
 </sect1>
 <sect1 id="sec.apparmor.start.build">
  <title>Building and Modifying Profiles</title>

  <para>
   AppArmor on <phrase os="osuse">openSUSE</phrase> ships with a preconfigured set of profiles for the
   most important applications. In addition, you can use AppArmor to create your
   own profiles for any application you want.
  </para>

  <para>
   There are two ways of managing profiles. One is to use the graphical
   front-end provided by the YaST AppArmor modules and the other is to use
   the command line tools provided by the AppArmor suite itself. Both methods
   basically work the same way.
  </para>

  <para>
   For each application, perform the following steps to create a profile:
  </para>

  <procedure id="proc.genprof">
   <step id="st.genprof1" performance="required">
    <para>
     As <systemitem class="username">root</systemitem>, let AppArmor create a rough outline of the application's
     profile by running <command>aa-genprof
     <replaceable>programname</replaceable></command>
    </para>
    <para>
     <emphasis>or</emphasis>
    </para>
    <para>
     Outline the basic profile by running <menuchoice>
     <guimenu>YaST</guimenu> <guimenu>AppArmor</guimenu> <guimenu>Add Profile
     Wizard</guimenu> </menuchoice> and specifying the complete path to the
     application you want to profile.
    </para>
    <para>
     A basic profile is outlined and AppArmor is put into learning mode, which
     means that it logs any activity of the program you are executing, but
     does not yet restrict it.
    </para>
   </step>
   <step id="st.genprof2" performance="required">
    <para>
     Run the full range of the application's actions to let AppArmor get a very
     specific picture of its activities.
    </para>
   </step>
   <step id="st.genprof3" performance="required">
    <para>
     Let AppArmor analyze the log files generated in
     <xref linkend="st.genprof2"/> by typing <keycap>S</keycap> in
     aa-genprof.
    </para>
    <para>
     <emphasis>or</emphasis>
    </para>
    <para>
     Analyze the logs by clicking <guimenu>Scan System Log for AppArmor
     Events</guimenu> in the <guimenu>Add Profile Wizard</guimenu> and
     following the instructions given in the wizard until the profile is
     completed.
    </para>
    <para>
     AppArmor scans the logs it recorded during the application's run and asks
     you to set the access rights for each event that was logged. Either set
     them for each file or use globbing.
    </para>
   </step>
   <step performance="required">
    <para>
     Depending on the complexity of your application, it might be necessary
     to repeat <xref linkend="st.genprof2"/> and
     <xref linkend="st.genprof3"/>. Confine the application, exercise it
     under the confined conditions, and process any new log events. To
     properly confine the full range of an application's capabilities, you
     might be required to repeat this procedure often.
    </para>
   </step>
   <step id="st.genprof4" performance="required">
    <para>
     Once all access permissions are set, your profile is set to enforce
     mode. The profile is applied and AppArmor restricts the application
     according to the profile just created.
    </para>
    <para>
     If you started aa-genprof on an application that had an existing
     profile that was in complain mode, this profile remains in learning
     mode upon exit of this learning cycle. For more information about
     changing the mode of a profile, refer to
     <xref linkend="sec.apparmor.commandline.profiling.summary.complain"/>
     and
     <xref linkend="sec.apparmor.commandline.profiling.summary.enforce"/>.
    </para>
   </step>
  </procedure>

  <para>
   Test your profile settings by performing every task you need with the
   application you just confined. Normally, the confined program runs
   smoothly and you do not notice AppArmor activities at all. However, if you
   notice certain misbehavior with your application, check the system logs
   and see if AppArmor is too tightly confining your application. Depending on
   the log mechanism used on your system, there are several places to look
   for AppArmor log entries:
  </para>

  <simplelist>
   <member><filename>/var/log/audit/audit.log</filename>
   </member>
   <member><filename>/var/log/messages</filename>
   </member>
   <member><filename>dmesg</filename>
   </member>
  </simplelist>

  <para>
   To adjust the profile, analyze the log messages relating to this
   application again as described in <xref linkend="st.genprof3"/>.
   Determine the access rights or restrictions when prompted.
  </para>

  <tip>
   <title>For More Information</title>
   <para>
    For more information about profile building and modification, refer to
    <xref linkend="cha.apparmor.profiles"/>,
    <xref linkend="cha.apparmor.yast"/>, and
    <xref linkend="cha.apparmor.commandline"/>.
   </para>
  </tip>
 </sect1>

 <sect1 id="sec.apparmor.start.update">
  <title>Updating Your Profiles</title>

  <para>
   Software and system configurations change over time. As a result, your
   profile setup for AppArmor might need some fine-tuning from time to time.
   AppArmor checks your system log for policy violations or other AppArmor events
   and lets you adjust your profile set accordingly. Any application
   behavior that is outside of any profile definition can also be addressed
   using the <guimenu>Update Profile Wizard</guimenu>.
  </para>

  <para>
   To update your profile set, proceed as follows:
  </para>

  <procedure>
   <step performance="required">
    <para>
     Start YaST and choose <menuchoice> <guimenu>AppArmor</guimenu>
     <guimenu>Update Profile Wizard</guimenu> </menuchoice>.
    </para>
   </step>
   <step performance="required">
    <para>
     Adjust access or execute rights to any resource or for any executable
     that has been logged when prompted.
    </para>
   </step>
   <step performance="required">
    <para>
     Leave YaST after you have answered all questions. Your changes are
     applied to the respective profiles.
    </para>
   </step>
  </procedure>

  <tip>
   <title>For More Information</title>
   <para>
    For more information about updating your profiles from the system logs,
    refer to <xref linkend="sec.apparmor.yast.update"/>.
   </para>
  </tip>
 </sect1>
</chapter>
