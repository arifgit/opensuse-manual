<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE preface PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd">
<!--
*********************************
Please see LICENSE.txt for this document's license.
*********************************
-->
<preface xml:base="tuning_intro.xml" id="preface.tuning">
 <title>About This Guide</title>
 <para>
  <phrase os="osuse">openSUSE</phrase> is used for a broad range of usage scenarios in enterprise
  and scientific data centers. SUSE has ensured <phrase os="osuse">openSUSE</phrase> is set up in
  a way that it accommodates different operation purposes with optimal
  performance. However, <phrase os="osuse">openSUSE</phrase> must meet very different demands when
  employed on a number crunching server compared to a file server, for
  example.
 </para>
 <para>
  Generally it is not possible to ship a distribution that will by default
  be optimized for all kinds of workloads. Due to the simple fact that
  different workloads vary substantially in various aspectsâ€”most
  importantly I/O access patterns, memory access patterns, and process
  scheduling. A behavior that perfectly suits a certain workload might t
  reduce performance of a completely different workload (for example, I/O
  intensive databases usually have completely different requirements
  compared to CPU-intensive tasks, such as video encoding). The great
  versatility of Linux makes it possible to configure your system in a way
  that it brings out the best in each usage scenario.
 </para>
 <para>
  This manual introduces you to means to monitor and analyze your system. It
  describes methods to manage system resources and to tune your system. This
  guide does <emphasis>not</emphasis> offer recipes for special scenarios,
  because each server has got its own different demands. It rather enables
  you to thoroughly analyze your servers and make the most out of them.
 </para>
 <variablelist>
  <varlistentry>
   <term>General Notes on System Tuning</term>
   <listitem>
    <para>
     Tuning a system requires a carefully planned proceeding. Learn which
     steps are necessary to successfully improve your system.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry>

   <term><xref linkend="part.tuning.monitoring"/>
   </term>
   <listitem>
    <para>
     Linux offers a large variety of tools to monitor almost every aspect of
     the system. Learn how to use these utilities and how to read and
     analyze the system log files.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>

   <term><xref linkend="part.tuning.kerneltrace"/>
   </term>
   <listitem>
    <para>
     The Linux kernel itself offers means to examine every nut, bolt and
     screw of the system. This part introduces you to SystemTap, a scripting
     language for writing kernel modules that can be used to analyze and
     filter data. Collect debugging information and find bottlenecks by
     using kernel probes and use perfmon2 to access the CPU's performance
     monitoring unit. Last, monitor applications with the help of Oprofile.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>

   <term><xref linkend="part.tuning.resources"/>
   </term>
   <listitem>
    <para>
     Learn how to set up a tailor-made system fitting exactly the server's
     need. Get to know how to use power management while at the same time
     keeping the performance of a system at a level that matches the current
     requirements.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>

   <term><xref linkend="part.tuning.kernel"/>
   </term>
   <listitem>
    <para>
     The Linux kernel can be optimized either by using sysctl or via the
     <filename>/proc</filename> file system. This part covers tuning the I/O
     performance and optimizing the way how Linux schedules processes. It
     also describes basic principles of memory management and shows how
     memory management could be fine-tuned to suit needs of specific
     applications and usage patterns. Furthermore, it describes how to
     optimize network performance.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>

   <term><xref linkend="part.tuning.dumps"/>
   </term>
   <listitem>
    <para>
     This part enables you to analyze and handle application or system
     crashes. It introduces tracing tools such as strace or ltrace and
     describes how to handle system crashes using Kexec and Kdump.
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
 
 <para>
  Many chapters in this manual contain links to additional documentation
  resources. This includes additional documentation that is available on the
  system as well as documentation available on the Internet.
 </para>
 <para>
  For an overview of the documentation available for your product and the
  latest documentation updates, refer to
  <ulink url="http://www.suse.com/documentation"/> or to the following
  section:
 </para>
 <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="common_intro_available_doc_i.xml" parse="xml"/>
 <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="common_intro_feedback_i.xml" parse="xml"/>
 <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="common_intro_typografie_i.xml" parse="xml"/>
 <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" os="osuse" href="common_intro_making_i.xml" parse="xml"/>
 <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" os="osuse" href="common_intro_source_code_i.xml" parse="xml"/>
 <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" os="osuse" href="common_intro_acknowl_i.xml" parse="xml"/>
</preface>
