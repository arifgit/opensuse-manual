<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd">
<!--
*********************************
Please see LICENSE.txt for this document's license.
*********************************
-->
<chapter xml:base="tuning_logfiles.xml" id="cha.tuning.logfiles">
 <title>Analyzing and Managing System Log Files</title>
 <para>
  System log file analysis is one of the most important tasks when analyzing
  the system. In fact, looking at the system log files should be the first
  thing to do when maintaining or troubleshooting a system. <phrase os="osuse">openSUSE</phrase>
  automatically logs almost everything that happens on the system in detail.
  Normally, system log files are written in plain text and therefore, can be
  easily read using an editor or pager. They are also parsable by scripts,
  allowing you to easily filter their content.
 </para>
 <sect1 id="sec.tuning.logfiles.logs">
  <title>System Log Files in <filename>/var/log/</filename></title>

  <para>
   System log files are always located under the
   <filename>/var/log</filename> directory. The following list presents an
   overview of all system log files from <phrase os="osuse">openSUSE</phrase> present after a
   default installation. Depending on your installation scope,
   <filename>/var/log</filename> also contains log files from other services
   and applications not listed here. Some files and directories described
   below are <quote>placeholders</quote> and are only used, when the
   corresponding application is installed. Most log files are only visible
   for the user <systemitem class="username">root</systemitem>.
  </para>

  <variablelist>
   <varlistentry>
    <term><filename>acpid</filename>
    </term>
    <listitem>
     <para>
      Log of the advanced configuration and power interface event daemon
      (<systemitem class="daemon">acpid</systemitem>), a daemon to notify
      user-space programs of ACPI events.
      <systemitem class="daemon">acpid</systemitem> will log all of
      its activities, as well as the <systemitem>STDOUT</systemitem> and
      <systemitem>STDERR</systemitem> of any actions to syslog.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>apparmor</filename>
    </term>
    <listitem>
     <para>
      AppArmor log files. See <xref linkend="part.apparmor"/> for details of
      AppArmor.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>audit</filename>
    </term>
    <listitem>
     <para>
      Logs from the audit framework. 
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>boot.msg</filename>
    </term>
    <listitem>
     <para>
      Log of the system init processâ€”this file contains all boot
      messages from the Kernel, the boot scripts and the services started
      during the boot sequence.
     </para>
     <para>
      Check this file to find out whether your hardware has been correctly
      initialized or all services have been started successfully.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>boot.omsg</filename>
    </term>
    <listitem>
     <para>
      Log of the system shutdown process - this file contains all messages
      issued on the last shutdown or reboot.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>ConsoleKit/*</filename>
    </term>
    <listitem>
     <para>
      Logs of the <systemitem class="daemon">ConsoleKit</systemitem> daemon
      (daemon for tracking what users are logged in and how they interact
      with the computer).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>cups/</filename>
    </term>
    <listitem>
     <para>
      Access and error logs of the Common UNIX Printing System
      (<systemitem class="daemon">cups</systemitem>).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>faillog</filename>
    </term>
    <listitem>
     <para>
      Database file that contains all login failures. Use the
      <command>faillog</command> command to view. See <command>man 8
      faillog</command> for more information.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>firewall</filename>
    </term>
    <listitem>
     <para>
      Firewall logs.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>gdm/*</filename>
    </term>
    <listitem>
     <para>
      Log files from the GNOME display manager.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>krb5</filename>
    </term>
    <listitem>
     <para>
      Log files from the Kerberos network authentication system.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>lastlog</filename>
    </term>
    <listitem>
     <para>
      The lastlog file is a database which contains info on the last login
      of each user. Use the command <command>lastlog</command> to view. See
      <command>man 8 lastlog</command> for more information.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>localmessages</filename>
    </term>
    <listitem>
     <para>
      Log messages of some boot scripts, for example the log of the DHCP
      client.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>mail*</filename>
    </term>
    <listitem>
     <para>
      Mail server (<systemitem class="service">postfix</systemitem>,
      <systemitem class="service">sendmail</systemitem>) logs.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>messages</filename>
    </term>
    <listitem>
     <para>
      This is the default place where all Kernel and system log messages go
      and should be the first place (along with
      <filename>/var/log/warn</filename>) to look at in case of problems.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>NetworkManager</filename>
    </term>
    <listitem>
     <para>
      NetworkManager log files
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>news/*</filename>
    </term>
    <listitem>
     <para>
      Log messages from a news server.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>ntp</filename>
    </term>
    <listitem>
     <para>
      Logs from the Network Time Protocol daemon
      (<systemitem class="daemon">ntpd</systemitem>).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>pk_backend_zypp</filename>
    </term>
    <listitem>
     <para>
      PackageKit (with <systemitem class="library">libzypp</systemitem>
      backend) log files.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>puppet/*</filename>
    </term>
    <listitem>
     <para>
      Log files from the data center automation tool puppet.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>samba/*</filename>
    </term>
    <listitem>
     <para>
      Log files from samba, the Windows SMB/CIFS file server.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>SaX.log</filename>
    </term>
    <listitem>
     <para>
      Logs from SaX2, the SUSE advanced X11 configuration tool.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>scpm</filename>
    </term>
    <listitem>
     <para>
      Logs from the system configuration profile management
      (<systemitem class="resource">scpm</systemitem>).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>warn</filename>
    </term>
    <listitem>
     <para>
      Log of all system warnings and errors. This should be the first place
      (along with <filename>/var/log/messages</filename>) to look at in case
      of problems.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>wtmp</filename>
    </term>
    <listitem>
     <para>
      Database of all login/logout activities, runlevel changes and remote
      connections. Use the command <command>last</command> to view. See
      <command>man 1 last</command> for more information.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>xinetd.log</filename>
    </term>
    <listitem>
     <para>
      Log files from the extended Internet services daemon
      (<systemitem class="daemon">xinetd</systemitem>).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>Xorg.0.log</filename>
    </term>
    <listitem>
     <para>
      X startup log file. Refer to this in case you have problems starting
      X. Copies from previous X starts are numbered
      Xorg.<replaceable>?</replaceable>.log.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>YaST2/*</filename>
    </term>
    <listitem>
     <para>
      All YaST log files.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>zypp/*</filename>
    </term>
    <listitem>
     <para>
      <systemitem class="library">libzypp</systemitem> log files. Refer to
      these files for the package installation history.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>zypper.log</filename>
    </term>
    <listitem>
     <para>
      Logs from the command line installer <command>zypper</command>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 id="sec.tuning.logfiles.view">
  <title>Viewing and Parsing Log Files</title>

  <para>
   To view log files, you can use your favorite text editor. There is also a
   simple YaST module for viewing <filename>/var/log/messages</filename>,
   available in the YaST Control Center under <menuchoice>
   <guimenu>Miscellaneous</guimenu> <guimenu>System Log</guimenu>
   </menuchoice>.
  </para>

  <para>
   For viewing log files in a text console, use the commands
   <command>less</command> or <command>more</command>. Use
   <command>head</command> and <command>tail</command> to view the beginning
   or end of a log file. To view entries appended to a log file in real-time
   use <command>tail <option>-f</option></command>. For information about
   how to use these tools, see their man pages.
  </para>

  <para>
   To search for strings or regular expressions in log files use
   <command>grep</command>. <command>awk</command> is useful for parsing and
   rewriting log files.
  </para>
 </sect1>
 <sect1 id="sec.tuning.logfiles.logrotate">
  <title>Managing Log Files with <command>logrotate</command></title>

  <para>
   Log files under <filename>/var/log</filename> grow on a daily basis and
   quickly become very big. <command>logrotate</command> is a tool for large
   amounts of log files and helps you to manage these files and to control
   their growth. It allows automatic rotation, removal, compression, and
   mailing of log files. Log files can be handled periodically (daily,
   weekly, or monthly) or when exceeding a particular size.
  </para>

  <para>
   <command>logrotate</command> is usually run as a daily cron job. It does
   not modify any log files more than once a day unless the log is to be
   modified because of its size, because <command>logrotate</command> is
   being run multiple times a day, or the <option>--force</option> option is
   used.
  </para>

  <para>
   The main configuration file of <command>logrotate</command> is
   <filename>/etc/logrotate.conf</filename>. System packages as well as
   programs that produce log files (for example,
   <systemitem class="resource">apache2</systemitem>) put their own
   configuration files in the <filename>/etc/logrotate.d/</filename>
   directory. The content of <filename>/etc/logrotate.d/</filename> is
   included via <filename>/etc/logrotate.conf</filename>.
  </para>

  <example id="ex.tuning.logfiles.logrotate.config">
   <title>Example for /etc/logrotate.conf</title>
   <screen># see "man logrotate" for details
# rotate log files weekly
weekly

# keep 4 weeks worth of backlogs
rotate 4

# create new (empty) log files after rotating old ones
create

# use date as a suffix of the rotated file
dateext

# uncomment this if you want your log files compressed
#compress

# comment these to switch compression to use gzip or another
# compression scheme
compresscmd /usr/bin/bzip2
uncompresscmd /usr/bin/bunzip2

# RPM packages drop log rotation information into this directory
include /etc/logrotate.d</screen>
  </example>

  <important>
   <para>
    The <systemitem>create</systemitem> option pays heed to the modes and
    ownerships of files specified in <filename>/etc/permissions*</filename>.
    If you modify these settings, make sure no conflicts arise.
   </para>
  </important>

  <para>
   <command>logrotate </command>is controlled through cron and is called
   daily by <filename>/etc/cron.daily/logrotate</filename>. Use
   <filename>/var/lib/logrotate.status</filename> to find out when a
   particular file has been rotated lastly.
  </para>


 </sect1>
 <sect1 id="sec.tuning.logfiles.logwatch">
  <title>Monitoring Log Files with <command>logwatch</command></title>

  <para>
   <command>logwatch</command> is a customizable, pluggable log-monitoring
   script. It parses system logs, extracts the important information and
   presents them in a human readable manner. To use
   <command>logwatch</command>, install the
   <systemitem>logwatch</systemitem> package.
  </para>

  <para>
   <command>logwatch</command> can either be used at the command-line to
   generate on-the-fly reports, or via cron to regularly create custom
   reports. Reports can either be printed on the screen, saved to a file, or
   be mailed to a specified address. The latter is especially useful when
   automatically generating reports via cron.
  </para>

  <para>
   The command-line syntax is easy. You basically tell <command>logwatch
   </command> for which service, time span and to which detail level to
   generate a report:
  </para>

  <screen><?dbsuse-fo font-size="7pt"?>
# Detailed report on all kernel messages from yesterday
logwatch --service kernel --detail High --range Yesterday --print

# Low detail report on all sshd events recorded (incl. archived logs)
logwatch --service sshd --detail Low --range All --archives --print

# Mail a report on all smartd messages from May 5th to May 7th to root@localhost
logwatch --service smartd --range 'between 5/5/2005 and 5/7/2005' \
--mailto root@localhost --print
</screen>

  <para>
   The <option>--range</option> option has got a complex syntaxâ€”see
   <command>logwatch <option>--range help</option></command> for details. A
   list of all services that can be queried is available with the following
   command:
  </para>

  <screen>ls /usr/share/logwatch/default.conf/services/ | sed 's/\.conf//g'</screen>

  <para>
   <command>logwatch</command> can be customized to great detail. However,
   the default configuration should be sufficient in most cases. The default
   configuration files are located under
   <filename>/usr/share/logwatch/default.conf/</filename>. Never change them
   because they would get overwritten again with the next update. Rather
   place custom configuration in <filename>/etc/logwatch/conf/</filename>
   (you may use the default configuration file as a template, though). A
   detailed HOWTO on customizing <command>logwatch</command> is available at
   <filename>/usr/share/doc/packages/logwatch/HOWTO-Customize-LogWatch</filename>.
   The following config files exist:
  </para>

  <variablelist>
   <varlistentry>
    <term><filename>logwatch.conf</filename>
    </term>
    <listitem>
     <para>
      The main configuration file. The default version is extensively
      commented. Each configuration option can be overwritten on the command
      line.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>ignore.conf</filename>
    </term>
    <listitem>
     <para>
      Filter for all lines that should globally be ignored by
      <command>logwatch</command>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>services/*.conf</filename>
    </term>
    <listitem>
     <para>
      The service directory holds configuration files for each service you
      can generate a report for.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>logfiles/*.conf</filename>
    </term>
    <listitem>
     <para>
      Specifications on which log files should be parsed for each service.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 id="sec.tuning.logfiles.logger">
  <title>Using <command>logger</command> to Make System Log Entries</title>
  <para>
   <command>logger</command> is a tool for making entries in the system log.
   It provides a shell command interface to the syslog(3) system log module.
   For example, the following line outputs its message in
   <filename>/var/log/messages</filename>:
  </para>

  <screen>logger -t Test "This messages comes from $USER"</screen>

  <para>
   Depending on the current user and hostname,
   <filename>/var/log/messages</filename> contains a line similar to this:
  </para>

  <screen>Sep 28 13:09:31 venus Test: This messages comes from tux</screen>
 </sect1>
</chapter>
